import os

import mol
import grid
import grid_gpu


def run():
    mol_string = """
    36
    -12.131,-9.114,61.917,7
    -12.427,-10.194,62.696,6
    -12.016,-11.285,62.117,7
    -11.433,-10.978,60.936,6
    -10.826,-11.727,59.911,6
    -10.354,-11.088,58.849,7
    -10.441,-9.761,58.752,6
    -11.002,-9.018,59.699,7
    -11.504,-9.581,60.789,6
    -12.272,-6.337,64.123,6
    -11.492,-5.648,62.982,6
    -11.169,-6.838,62.038,6
    -12.433,-7.714,62.225,6
    -12.784,-7.574,63.613,8
    -14.303,-5.0,63.67,7
    -14.213,-5.239,62.734,1
    -13.409,-5.457,64.569,6
    -13.522,-5.159,65.74,8
    -16.717,-4.938,64.056,6
    -15.409,-4.144,64.104,6
    -10.294,-5.046,63.476,8
    -9.536,-5.645,63.506,1
    -9.993,-7.529,62.464,8
    -10.158,-8.431,62.772,1
    -10.734,-13.106,60.003,7
    -11.511,-13.627,60.26,1
    -9.895,-13.551,59.809,1
    -9.91,-9.117,57.589,6
    -9.475,-8.589,56.634,6
    -8.943,-7.945,55.472,6
    -8.768,-6.558,55.454,6
    -8.255,-5.945,54.331,6
    -7.913,-6.7,53.222,6
    -8.084,-8.073,53.231,6
    -8.59,-8.7,54.35,6
    -7.353,-6.022,51.998,6
    1
    -6.284,-6.916,51.363,6
    3
    -6.347,-6.786,49.863,6
    -6.368,-5.681,49.348,8
    -6.377,-7.784,49.165,8
    """

    m = mol.Mol.from_string(mol_string)

    # atom types to consider
    ATOM_TYPES = [
        6, 7, 8, 9, 15, 16, 17, 35, 53
    ]

    # mapping
    # atomic number -> van der waals radius
    VDW_RADIUS = {
        6: 1.9,
        7: 1.8,
        8: 1.7,
        9: 1.5,
        15: 2.1,
        16: 2.0,
        17: 1.8,
        35: 2.0,
        53: 2.2
    }

    # number of grids to generate
    N = 10

    # compile kernel
    g2 = grid_gpu.generate_grid(m.atoms, ATOM_TYPES, VDW_RADIUS, m.center(), 24, 0.5)

    import time

    a = time.time()
    for i in range(N):
        g = grid.generate_grid(m.atoms, ATOM_TYPES, VDW_RADIUS, m.center(), 24, 0.5)
    b = time.time()

    print('cpu: %f' % (b - a))

    a = time.time()
    for i in range(N):
        g2 = grid_gpu.generate_grid(m.atoms, ATOM_TYPES, VDW_RADIUS, m.center(), 24, 0.5)
    b = time.time()

    print('gpu: %f' % (b-a))

if __name__ == '__main__':
    run()
    