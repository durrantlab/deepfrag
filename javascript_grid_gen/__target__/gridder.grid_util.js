'use strict';var math={};import{AssertionError,AttributeError,BaseException,DeprecationWarning,Exception,IndexError,IterableError,KeyError,NotImplementedError,RuntimeWarning,StopIteration,UserWarning,ValueError,Warning,__JsIterator__,__PyIterator__,__Terminal__,__add__,__and__,__call__,__class__,__envir__,__eq__,__floordiv__,__ge__,__get__,__getcm__,__getitem__,__getslice__,__getsm__,__gt__,__i__,__iadd__,__iand__,__idiv__,__ijsmod__,__ilshift__,__imatmul__,__imod__,__imul__,__in__,__init__,__ior__,
__ipow__,__irshift__,__isub__,__ixor__,__jsUsePyNext__,__jsmod__,__k__,__kwargtrans__,__le__,__lshift__,__lt__,__matmul__,__mergefields__,__mergekwargtrans__,__mod__,__mul__,__ne__,__neg__,__nest__,__or__,__pow__,__pragma__,__proxy__,__pyUseJsNext__,__rshift__,__setitem__,__setproperty__,__setslice__,__sort__,__specialattrib__,__sub__,__super__,__t__,__terminal__,__truediv__,__withblock__,__xor__,abs,all,any,assert,bool,bytearray,bytes,callable,chr,copy,deepcopy,delattr,dict,dir,divmod,enumerate,
filter,float,getattr,hasattr,input,int,isinstance,issubclass,len,list,map,max,min,object,ord,pow,print,property,py_TypeError,py_iter,py_metatype,py_next,py_reversed,py_typeof,range,repr,round,set,setattr,sorted,str,sum,tuple,zip}from"./org.transcrypt.__runtime__.js";import*as __module_math__ from"./math.js";__nest__(math,"",__module_math__);var __name__="gridder.grid_util";export var GPU_DIM=8;export var grid_to_real_no_rot=function(x,y,z,half_width,res,center){return tuple([grid_to_real_no_rot_one_axis(x,
half_width,res,center.x),grid_to_real_no_rot_one_axis(y,half_width,res,center.y),grid_to_real_no_rot_one_axis(z,half_width,res,center.z)])};export var grid_to_real_no_rot_one_axis=function(val_axis,half_width,res,center_axis){var tval_axis=val_axis-half_width;var tval_axis=tval_axis*res;var tval_axis=tval_axis+center_axis;return tval_axis};export var filter_atoms_no_rot=function(atom_coords,atom_layers,width,res,center){var PAD=1.75;var half_width=width/2;var __left0__=grid_to_real_no_rot(0,0,0,half_width,
res,center);var ax=__left0__[0];var ay=__left0__[1];var az=__left0__[2];var __left0__=grid_to_real_no_rot(width-1,width-1,width-1,half_width,res,center);var bx=__left0__[0];var by=__left0__[1];var bz=__left0__[2];var filt_coords=[];var filt_layers=[];for(var i=0;i<len(atom_coords);i++){var __left0__=atom_coords[i];var x=__left0__[0];var y=__left0__[1];var z=__left0__[2];if(x>ax-PAD&&y>ay-PAD&&z>az-PAD&&x<bx+PAD&&y<by+PAD&&z<bz+PAD){filt_coords.append(atom_coords[i]);filt_layers.append(atom_layers[i])}}return tuple([filt_coords,
filt_layers])};export var mol_gridify2_one_channel=function(grid,layer_offset,abs_channel_to_consider,width,res,center,filt_coords,filt_layers){var r=1.75;var r2=r*r;var half_width=width/2;for(var i=0;i<len(filt_coords);i++){var ft_with_offset=layer_offset+filt_layers[i];if(ft_with_offset!=abs_channel_to_consider)continue;var __left0__=filt_coords[i];var nx=__left0__[0];var ny=__left0__[1];var nz=__left0__[2];var rng=range(width);for(var x of rng){var tx=grid_to_real_no_rot_one_axis(x,half_width,
res,center.x);var d2_x_prt=Math.pow(nx-tx,2);for(var y of rng){var ty=grid_to_real_no_rot_one_axis(y,half_width,res,center.y);var d2_x_prt_plus_d2_y_prt=d2_x_prt+Math.pow(ny-ty,2);for(var z of rng){var tz=grid_to_real_no_rot_one_axis(z,half_width,res,center.z);var d2=d2_x_prt_plus_d2_y_prt+Math.pow(nz-tz,2);if(d2>r2)continue;grid[0][ft_with_offset][x][y][z]+=math.exp(-2*d2/r2)}}}}return grid};export var flatten_tensor=function(grid,shape){var flat=[];for(var i1=0;i1<shape[0];i1++)for(var i2=0;i2<
shape[1];i2++)for(var i3=0;i3<shape[2];i3++)for(var i4=0;i4<shape[3];i4++)for(var i5=0;i5<shape[4];i5++)flat.append(grid[i1][i2][i3][i4][i5]);return flat};export var make_tensor=function(shape){var t=[];for(var i1=0;i1<shape[0];i1++){var t1=[];for(var i2=0;i2<shape[1];i2++){var t2=[];for(var i3=0;i3<shape[2];i3++){var t3=[];for(var i4=0;i4<shape[3];i4++){var t4=[];for(var i5=0;i5<shape[4];i5++)t4.append(0);t3.append(t4)}t2.append(t3)}t1.append(t2)}t.append(t1)}return t};export var get_raw_batch_one_channel=
function(r_coords,r_types,p_coords,p_types,conn,num_samples,width,res,channel){var num_samples=num_samples===null?1:num_samples;var width=width===null?24:width;var res=res===null?.5:res;var parent_channels=4;var rec_channels=5;var B=num_samples;var T=rec_channels+parent_channels;var N=width;var shape=tuple([B,T,N,N,N]);var grid=make_tensor(shape);if(channel<parent_channels){var coords=p_coords;var types=p_types;var offset=0}else{var coords=r_coords;var types=r_types;var offset=parent_channels}var __left0__=
filter_atoms_no_rot(coords,types,width,res,conn);var filt_coords=__left0__[0];var filt_layers=__left0__[1];var grid=mol_gridify2_one_channel(grid,offset,channel,width,res,conn,filt_coords,filt_layers);return flatten_tensor(grid,shape)};

//# sourceMappingURL=gridder.grid_util.map